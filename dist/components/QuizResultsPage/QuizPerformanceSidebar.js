import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { BarChart3, TrendingUp, PieChart } from 'lucide-react';
export default function QuizPerformanceSidebar({ loadingStats, quizStats, actualScore, correctCount, totalQuestions, quizDifficulty }) {
    return (_jsxs("div", { className: "card sticky top-8", children: [_jsxs("div", { className: "flex items-center mb-4", children: [_jsx(BarChart3, { className: "w-5 h-5 text-primary-600 mr-2" }), _jsx("h2", { className: "text-lg font-semibold text-gray-900", children: "Quiz Performance" })] }), loadingStats ? (_jsxs("div", { className: "flex items-center justify-center py-8", children: [_jsx("div", { className: "w-5 h-5 border-2 border-primary-600 border-t-transparent rounded-full animate-spin mr-2" }), _jsx("span", { className: "text-sm text-gray-600", children: "Loading stats..." })] })) : quizStats ? (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-700 mb-3", children: "Overall Statistics" }), _jsxs("div", { className: "grid grid-cols-2 gap-3", children: [_jsxs("div", { className: "text-center p-3 bg-blue-50 rounded-lg", children: [_jsx("div", { className: "text-lg font-bold text-blue-600", children: quizStats.totalQuizzes }), _jsx("div", { className: "text-xs text-blue-700", children: "Total Quizzes" })] }), _jsxs("div", { className: "text-center p-3 bg-green-50 rounded-lg", children: [_jsxs("div", { className: "text-lg font-bold text-green-600", children: [quizStats.averageScore, "%"] }), _jsx("div", { className: "text-xs text-green-700", children: "Average Score" })] }), _jsxs("div", { className: "text-center p-3 bg-yellow-50 rounded-lg col-span-2", children: [_jsxs("div", { className: "text-lg font-bold text-yellow-600", children: [quizStats.bestScore, "%"] }), _jsx("div", { className: "text-xs text-yellow-700", children: "Best Score" })] })] })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-700 mb-3", children: "Current Quiz" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between items-center p-2 bg-gray-50 rounded", children: [_jsx("span", { className: "text-sm text-gray-600", children: "Accuracy" }), _jsxs("span", { className: "text-sm font-medium", children: [actualScore, "%"] })] }), _jsxs("div", { className: "flex justify-between items-center p-2 bg-gray-50 rounded", children: [_jsx("span", { className: "text-sm text-gray-600", children: "Questions" }), _jsxs("span", { className: "text-sm font-medium", children: [correctCount, "/", totalQuestions] })] }), _jsxs("div", { className: "flex justify-between items-center p-2 bg-gray-50 rounded", children: [_jsx("span", { className: "text-sm text-gray-600", children: "Difficulty" }), _jsx("span", { className: `text-sm font-medium px-2 py-1 rounded text-xs ${quizDifficulty === 'easy' ? 'bg-green-100 text-green-700' :
                                                    quizDifficulty === 'medium' ? 'bg-yellow-100 text-yellow-700' :
                                                        'bg-red-100 text-red-700'}`, children: quizDifficulty })] })] })] }), Object.keys(quizStats.topicStats).length > 0 && (_jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-700 mb-3", children: "Topic Performance" }), _jsx("div", { className: "space-y-2", children: Object.entries(quizStats.topicStats).slice(0, 4).map(([topic, stats]) => (_jsxs("div", { className: "flex justify-between items-center p-2 bg-gray-50 rounded", children: [_jsxs("div", { className: "min-w-0 flex-1", children: [_jsx("div", { className: "text-sm font-medium text-gray-900 truncate", children: topic }), _jsxs("div", { className: "text-xs text-gray-500", children: [stats.count, " quiz", stats.count !== 1 ? 'es' : ''] })] }), _jsxs("div", { className: "text-sm font-medium text-gray-700", children: [stats.avgScore, "%"] })] }, topic))) })] })), quizStats.recentAttempts.length > 0 && (_jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium text-gray-700 mb-3", children: "Recent Attempts" }), _jsx("div", { className: "space-y-2", children: quizStats.recentAttempts.slice(0, 3).map((attempt, index) => (_jsxs("div", { className: "p-2 bg-gray-50 rounded", children: [_jsxs("div", { className: "flex justify-between items-start mb-1", children: [_jsx("div", { className: "text-sm font-medium text-gray-900 truncate flex-1 mr-2", children: attempt.title }), _jsxs("div", { className: `text-sm font-medium ${attempt.score >= 80 ? 'text-green-600' :
                                                        attempt.score >= 60 ? 'text-yellow-600' : 'text-red-600'}`, children: [attempt.score, "%"] })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("div", { className: "text-xs text-gray-500", children: attempt.topic }), _jsx("div", { className: "text-xs text-gray-500", children: attempt.date })] })] }, index))) })] })), _jsxs("div", { className: "bg-gradient-to-br from-primary-50 via-white to-blue-50 rounded-lg border border-primary-200 p-3 relative overflow-hidden", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-r from-primary-500/5 to-blue-500/5 pointer-events-none" }), _jsxs("div", { className: "relative", children: [_jsxs("div", { className: "flex items-center mb-2", children: [_jsx("div", { className: "w-6 h-6 bg-gradient-to-br from-primary-500 to-blue-600 rounded flex items-center justify-center mr-2", children: _jsx(TrendingUp, { className: "w-3 h-3 text-white" }) }), _jsx("span", { className: "text-sm font-medium text-primary-900", children: "Performance Insight" })] }), _jsx("p", { className: "text-xs text-primary-700", children: actualScore > quizStats.averageScore
                                            ? `Great job! This score is ${actualScore - quizStats.averageScore}% above your average.`
                                            : actualScore === quizStats.averageScore
                                                ? 'This score matches your average performance.'
                                                : `This score is ${quizStats.averageScore - actualScore}% below your average. Keep practicing!` })] })] })] })) : (_jsxs("div", { className: "text-center py-8", children: [_jsx(PieChart, { className: "w-8 h-8 text-gray-400 mx-auto mb-2" }), _jsx("p", { className: "text-sm text-gray-600", children: "No statistics available" })] }))] }));
}
